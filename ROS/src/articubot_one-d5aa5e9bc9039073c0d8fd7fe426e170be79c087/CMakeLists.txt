cmake_minimum_required(VERSION 3.16)
project(articubot_one)

# Default to C99
if(NOT CMAKE_C_STANDARD)
  set(CMAKE_C_STANDARD 99)
endif()

# Default to C++14
if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 17)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# Find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclpy REQUIRED)
find_package(std_msgs REQUIRED)
find_package(nav_msgs REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(sensor_msgs REQUIRED)       # Added for sensor messages (e.g., LaserScan, Imu)
find_package(trajectory_msgs REQUIRED)


# Install Python scripts
install(
  PROGRAMS
    scripts/linear_actuator_controller_node.py  # Add this line to install your Python script
    scripts/odom_publisher.py
    scripts/odom_irl_publisher.py
    scripts/gazebo_motor_driver.py
    scripts/palletron_controller_node.py
    scripts/palletron_irl_controller_node.py
    scripts/laser_scan_fusion_node.py
    scripts/palletron_joint_state_publisher_node.py
    scripts/linear_actuator_controller_irl_node.py
  DESTINATION lib/${PROJECT_NAME}
)

# Install other files like config, launch, and worlds
#install(
#  DIRECTORY config description launch worlds
#  DESTINATION share/${PROJECT_NAME}
#)

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

install(
  DIRECTORY config description launch worlds
  DESTINATION share/${PROJECT_NAME}
)

ament_package()
