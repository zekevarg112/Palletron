import rclpy
from rclpy.node import Node
import time
import evdev
from evdev import ecodes, InputDevice, ff

class PS4RumbleNode(Node):
    def __init__(self):
        super().__init__('ps4_rumble_node')
        
        # Initialize the controller device (update with correct device path)
        # self.controller = evdev.InputDevice('/dev/input/event14')  # Replace with your controller path
        
        # Ensure device is open
        # self.controller.grab()

        self.timer = self.create_timer(2.0, self.trigger_rumble)

    def trigger_rumble(self):
        # # Find first EV_FF capable event device (that we have permissions
        # to use).
        
        for name in evdev.list_devices():
            dev = InputDevice(name)
            if ecodes.EV_FF in dev.capabilities():
                break

        rumble = ff.Rumble(strong_magnitude=0xffff, weak_magnitude=0xffff) #value to be generated by strong and small one
        effect_type = ff.EffectType(ff_rumble_effect=rumble)
        duration_ms = 500

        effect = ff.Effect(
            ecodes.FF_RUMBLE, -1, 0,
            ff.Trigger(0, 0),
            ff.Replay(duration_ms, 0),
            effect_type
        )

        repeat_count = 1
        effect_id = dev.upload_effect(effect)
        dev.write(ecodes.EV_FF, effect_id, repeat_count)
        time.sleep(1.0)
        dev.erase_effect(effect_id)


def main(args=None):
    rclpy.init(args=args)
    node = PS4RumbleNode()
    rclpy.spin(node)
    node.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
